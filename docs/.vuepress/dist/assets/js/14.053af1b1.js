(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{365:function(e,a,s){"use strict";s.r(a);var t=s(40),n=Object(t.a)({},(function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"modes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#modes"}},[e._v("#")]),e._v(" Modes")]),e._v(" "),s("p",[e._v("Mode 는 Vue CLI 프로젝트의 중요한 컨셉이다. 기본적으로 3가지 모드가 있다.")]),e._v(" "),s("ol",[s("li",[s("p",[s("strong",[e._v("development")])]),e._v(" "),s("p",[e._v("— "),s("code",[e._v("vue-cli-service serve")]),e._v(" 로 사용된다.")])]),e._v(" "),s("li",[s("p",[s("strong",[e._v("test")])]),e._v(" "),s("p",[e._v("— "),s("code",[e._v("vue-cli-service test:unit")]),e._v("로 사용된다.")])]),e._v(" "),s("li",[s("p",[s("strong",[e._v("production")])]),e._v(" "),s("p",[e._v("— "),s("code",[e._v("vue-cli-service build")]),e._v(" 와 "),s("code",[e._v("vue-cli-service test:e2e")]),e._v(" 로 사용된다.")])])]),e._v(" "),s("p",[s("code",[e._v("--mode")]),e._v(" 옵션 플래그를 전달하여 명령에 사용되는 기본 모드를 덮어쓸 수 있다.")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("vue-cli-service build --mode development\n")])])]),s("p",[e._v("이런 경우, build 명령어를 development 명령어로 덮어쓴다.")]),e._v(" "),s("p",[e._v("vue-cli-service를 실행될 때, 모든 corresponding files로부터 환경 변수가 로드된다. 만약 "),s("code",[e._v("NODE_ENV")]),e._v(" 변수가 포함되지 않은 경우 그에 따라 설정됩니다. 예를 들어 "),s("code",[e._v("NODE_ENV")]),e._v('는 프로덕션 모드에서는 "production"으로, 테스트 모드에서는 '),s("code",[e._v('"test"')]),e._v("로, 그렇지 않으면 "),s("code",[e._v('"development"')]),e._v("로 설정된다.")]),e._v(" "),s("p",[e._v("그럼 "),s("code",[e._v("NODE_ENV")]),e._v("는 앱이 기본 모드(개발, 프로덕션 또는 테스트)에서 실행 중이고 결과적으로 어떤 웹 팩 구성을 만들 것인지 결정한다.")]),e._v(" "),s("p",[e._v("예를 들어 "),s("code",[e._v("NODE_ENV")]),e._v('를 "test"로 설정하면, Vue CLI는 unit test 최적화되어 있는 웹 팩 구성을 생성한다. 유닛 테스트에 불필요한 이미지 및 기타 자산은 처리하지 않는다.')]),e._v(" "),s("p",[e._v("마찬가지로 "),s("code",[e._v("NODE_ENV= development")]),e._v(" 웹팩 설정을 생성하여 HMR(Hot Module Replacement)을 활성화하거나 자산을 해시하거나 vendor bundles 를 생성하여 개발 서버를 실행할 때 신속하게 재확보할 수 있다.")]),e._v(" "),s("ul",[s("li",[s("strong",[e._v("HMR")])])]),e._v(" "),s("p",[s("code",[e._v("vue-cli-service")]),e._v(" 빌드를 실행하는 경우 배포 환경에 관계없이 "),s("code",[e._v("NODE_ENV")]),e._v('를 항상 "production"으로 설정하여 배포할 수 있는 앱을 얻어야 합니다.')]),e._v(" "),s("blockquote",[s("p",[e._v("환경에 기본 "),s("code",[e._v("NODE_ENV")]),e._v("가 있는 경우 "),s("code",[e._v("vue-cli-service")]),e._v("명령을 실행할 때 이를 제거하거나 "),s("code",[e._v("NODE_ENV")]),e._v("를 명시적으로 설정해야 한다.")])]),e._v(" "),s("h2",{attrs:{id:"환경변수-environment-variables"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#환경변수-environment-variables"}},[e._v("#")]),e._v(" 환경변수 (Environment Variables)")]),e._v(" "),s("p",[e._v("프로젝트 루트에 파일 배치를 통해 환경 변수를 지정할 수 있다.")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v(".env                "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# loaded in all cases")]),e._v("\n.env.local          "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# loaded in all cases, ignored by git")]),e._v("\n.env."),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("mode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("         "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# only loaded in specified mode")]),e._v("\n.env."),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("mode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(".local   "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# only loaded in specified mode, ignored by git")]),e._v("\n")])])]),s("p",[e._v("env 파일에는 환경 변수의 키=값 쌍만 포함한다.")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("FOO")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("bar\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("VUE_APP_NOT_SECRET_CODE")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("some_value\n")])])]),s("p",[s("code",[e._v("NODE_ENV")]),e._v(", "),s("code",[e._v("BASE_URL")])]),e._v(" "),s("p",[s("code",[e._v("'NODE_ENV', 'BASE_URL'")]),e._v(" 혹은 "),s("code",[e._v("'VUE_'APP_'")]),e._v("로 시작하는 변수만 "),s("em",[e._v("클라이언트 번들")]),e._v("에 '웹 팩'과 함께 정적으로 내장("),s("code",[e._v("webpack.DefinePlugin")]),e._v(")됩니다. 같은 이름을 가질 수 있는 개인 키가 기계에 실수로 노출되지 않도록 하기 위한 것이다.")]),e._v(" "),s("p",[e._v("이외의 다른 규칙은 이곳에서 확인 가능하다.")]),e._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/motdotla/dotenv#rules",target:"_blank",rel:"noopener noreferrer"}},[e._v("GitHub - motdotla/dotenv: Loads environment variables from .env for nodejs projects."),s("OutboundLink")],1)]),e._v(" "),s("p",[e._v("또한  "),s("strong",[s("a",{attrs:{href:"https://github.com/motdotla/dotenv-expand",target:"_blank",rel:"noopener noreferrer"}},[e._v("dotenv-expand"),s("OutboundLink")],1)]),e._v(" 를 사용한 표현식도 가능하다. (available in Vue CLI 3.5+)")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("FOO")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("foo\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("BAR")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("bar\n\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("CONCAT")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$FOO")]),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$BAR")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# CONCAT=foobar")]),e._v("\n")])])]),s("p",[s("strong",[e._v("Env Loading Priorities")])]),e._v(" "),s("blockquote",[s("p",[e._v("특정 모드에 대한 Env 파일(예: .env.production)이 일반 모드(예: .env)보다 높은 우선순위를 가진다.\n또한 Vue CLI를 실행할 때 이미 존재하는 환경 변수의 우선 순위가 가장 높으며 .env 파일에서 덮어쓰지 않는다.\n.env 파일은 vue-cli 서비스를 시작할 때 로드된다. 변경한 후 서비스를 다시 시작해야 한다.")])]),e._v(" "),s("h3",{attrs:{id:"example-staging-mode"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#example-staging-mode"}},[e._v("#")]),e._v(" Example: Staging Mode")]),e._v(" "),s("p",[e._v("다음과 같은 파일이 있는 경우.")]),e._v(" "),s("p",[e._v("[ **.env ]**")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("VUE_APP_TITLE")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("My App\n")])])]),s("p",[e._v("[ "),s("strong",[e._v(".env.staging")]),e._v(" ]")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("NODE_ENV")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("production\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("VUE_APP_TITLE")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("My Staging App\n")])])]),s("ul",[s("li",[s("code",[e._v("vue-cli-service build")]),e._v(" 로 프로젝트를 빌드할때,  "),s("code",[e._v(".env")]),e._v(", "),s("code",[e._v(".env.production")]),e._v(" , "),s("code",[e._v(".env.production.local")]),e._v(" 가 존재하면 읽어온다.")]),e._v(" "),s("li",[s("code",[e._v("vue-cli-service build --mode staging")]),e._v(" staging mode 로 프로젝트를 빌드할때, "),s("code",[e._v(".env")]),e._v(", "),s("code",[e._v(".env.staging")]),e._v(" , "),s("code",[e._v(".env.staging.local")]),e._v(" 가 존재하면 읽어온다.")])]),e._v(" "),s("p",[e._v("두 가지 케이스 모두 "),s("code",[e._v("NODE_ENV")]),e._v(", 때문에 Production app으로 빌드된다. 하지만, staging 버전은 "),s("code",[e._v("process.env.VUE_APP_TITLE")]),e._v(" 가 다른 값으로 덮어씌워진다.")]),e._v(" "),s("h3",{attrs:{id:"using-env-variables-in-client-side-code"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#using-env-variables-in-client-side-code"}},[e._v("#")]),e._v(" "),s("strong",[e._v("Using Env Variables in Client-side Code")])]),e._v(" "),s("p",[e._v("환경 변수에 접근하고 싶을때, 이처럼 접근한다.")]),e._v(" "),s("div",{staticClass:"language-jsx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-jsx"}},[s("code",[e._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("process"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("env"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[e._v("VUE_APP_NOT_SECRET_CODE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),s("p",[e._v("VUE"),s("em",[e._v("APP")]),e._v("* 변수 외에도 앱 코드에서 항상 사용할 수 있는 두 가지 특수 변수가 있다.")]),e._v(" "),s("ul",[s("li",[s("p",[s("strong",[e._v("NODE_ENV")])]),e._v(" "),s("p",[e._v('—앱이 실행되는 모드에 따라 "개발", "프로덕션" 또는 "테스트" 중 하나가 된다.')])]),e._v(" "),s("li",[s("p",[s("strong",[e._v("BASE_URL")])]),e._v(" "),s("p",[e._v("—vue.config.js의 publicPath 옵션에 해당하며 앱이 배포되는 기본 경로")])])]),e._v(" "),s("p",[e._v("모든 환경 변수들은 "),s("code",[e._v("public/index.html")]),e._v(" 에서 보간법으로 사용가능하다.")]),e._v(" "),s("p",[s("strong",[s("a",{attrs:{href:"https://cli.vuejs.org/guide/html-and-static-assets.html#interpolation",target:"_blank",rel:"noopener noreferrer"}},[e._v("HTML - Interpolation"),s("OutboundLink")],1)]),e._v(".")]),e._v(" "),s("blockquote",[s("p",[s("strong",[e._v("TIP")]),e._v(" "),s("code",[e._v("vue.config.js")]),e._v(" 에서 env var를 computed하게 사용할 수도 있다.\n하지만, "),s("code",[e._v("VUE_APP_")]),e._v(" 표현식은 사용해야한다.")])]),e._v(" "),s("div",{staticClass:"language-jsx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-jsx"}},[s("code",[e._v("process"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("env"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[e._v("VUE_APP_VERSION")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'./package.json'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("version"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n\nmodule"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("exports "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// config")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),s("h3",{attrs:{id:"local-only-variables"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#local-only-variables"}},[e._v("#")]),e._v(" "),s("strong",[e._v("Local Only Variables")])]),e._v(" "),s("p",[e._v("깃에 커밋하고 싶지 않을때,  "),s("code",[e._v(".env.local")]),e._v(" 는  "),s("code",[e._v(".gitignore")]),e._v(" 가 기본이다.")]),e._v(" "),s("p",[e._v("깃 ignore하고 싶다면, 모드명 뒤에 "),s("code",[e._v(".local")]),e._v(" 을 붙이면 된다.")])])}),[],!1,null,null,null);a.default=n.exports}}]);